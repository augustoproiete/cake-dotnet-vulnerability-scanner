using Microsoft.Extensions.Logging;

namespace Cake.VulnerabilityScanner
{
    /// <summary>
    /// Scanner settings 
    /// </summary>
    public class ScanPackagesSettings
    {
        /// <summary>
        /// OssIndex base url 
        /// </summary>
        public string OssIndexBaseUrl { get; set; }

        /// <summary>
        /// OssIndex API token
        /// If not provided OssIndex will be called without authentication
        /// Calls with authentication has higher rate limit
        /// <href>https://ossindex.sonatype.org/doc/rest</href>
        /// </summary>
        public string OssIndexToken { get; set; }

        /// <summary>
        /// .sln file , or .csproj
        /// </summary>
        public string SolutionFile { get; set; }

        /// <summary>
        /// If true, the scan throws an exception when a Vulnerability is found
        /// </summary>
        public bool FailOnVulnerability { get; set; }

        /// <summary>
        /// example, nuget, npm, and so on 
        /// <href>https://ossindex.sonatype.org/ecosystems</href>
        /// </summary>
        public string Ecosystem { get; set; }

        /// <summary>
        /// Log level
        /// </summary>
        public LogLevel Verbosity { get; set; }


        /// <summary>
        /// If set, it will be called with pacakges info and scan result passed to it
        ///  this could be used a custom logic that will be called after the scan, 
        /// for instnace sending pacakges info and scan results to a certain data store
        /// </summary>
        public PostScanCallback postScanCallback { get; set; }

    }
}